$(document).ready( function () { function getStock(opts, complete) {    var defs = {        desc: false,        baseURL: 'http://query.yahooapis.com/v1/public/yql?q=',        query: 'select {display} from yahoo.finance.quotes where symbol in ({quotes}) | sort(field="{sortBy}", descending="{desc}")',        suffixURL: '&env=store://datatables.org/alltableswithkeys&format=json&callback=?'    };     opts = $.extend({        display: ['*'],        stocks: []    }, opts || {});     if (!opts.stocks.length) {        complete('No stock defined');        return;    }     var query = {        display: opts.display.join(', '),        quotes: opts.stocks.map(function (stock) {            return '"' + stock + '"';        }).join(', ')    };     defs.query = defs.query        .replace('{display}', query.display)        .replace('{quotes}', query.quotes)        .replace('{sortBy}', defs.sortBy)        .replace('{desc}', defs.desc);     defs.url = defs.baseURL + defs.query + defs.suffixURL;    $.getJSON(defs.url, function (data) {        var err = null;        if (!data || !data.query) {            err = true;        }        var results = data.query.results.quote;        results = $.isArray(results) ? results : [results];        complete(err, !err && { quote: results });    });}var opts = {    stocks: ['AAPL', 'GOOG'],    display: ['Name', 'Ask']}$("#tickerList").append("<tr><th>" + opts.display[0] + "</th><th>" + opts.display[1] + "</th><th class='extra'></th><th></th><th></th></tr>");// SEARCH FILTER$("#searchFilter").on("click", function () {  $(this).val('');})$("#searchFilter").on("blur", function () {  $(this).val('Filter by name');})var nameString;function nameToString() {	createDataTable();	nameString = [];	for (var i=0; i<dataTableArray.length; i++) {		nameString.push(dataTableArray[i].name);	}}   $("#searchFilter").on("keyup", function () {	nameToString();	$( "#searchFilter" ).autocomplete({  		source: nameString	});	$("tr.ticker").hide();	var searchedText = $('#searchFilter').val();	$("tr:contains(" + searchedText + ")").show();})// DATA TABLE var dataTableArray = [];function createDataTable () {	dataTableArray = [];	$("#tickerList tr.ticker").each(function () {	  dataTableArray.push({ticker: $(this).find(".tickerName").text(), limit: $(this).find(".tickerLimit").val(), name: $(this).find(".name").text(), ask: $(this).find(".ask").text(), checkLimitUp: $(".limitUp", this).is(":checked"), checkLimitDown: $(".limitDown", this).is(":checked")   });	  console.log(dataTableArray, "dataTableArray0");  })}function showDataTable () {  $("tr.ticker").remove();    for (var i = 0; i < dataTableArray.length; i++) {      $("#tickerList").append("<tr class='ticker'><td class='tickerName'>" + dataTableArray[i].ticker + "</td><td class='name'>" + dataTableArray[i].name + "</td><td class='ask'>" + dataTableArray[i].ask + "</td><td class='removeTicker'><i class='fa fa-trash'></i></td><td class='bsetLimit'><div class='insertLimit'>Limit: <div class='limitContainer'><form action=''><input type='radio' name='limit' value='sup' class='limitUp'"  + (dataTableArray[i].checkLimitUp ? 'checked' : ' ' ) + "/>Sup<input class='limitDown' type='radio' name='limit' value='inf'" + (dataTableArray[i].checkLimitDown ? 'checked' : ' ' ) + " />Inf</form><input class='tickerLimit' type='text' value='" + dataTableArray[i].limit + "'/></div></div></td></tr>");    console.log(dataTableArray[i].ticker);  }}// LIMITS$(document).on("click", ".tickerLimit", function (evt) {    $(evt.target).val('');});$(document).on("keypress", ".tickerLimit", function (evt) {  if(evt.which == 13) {    var valueLimit = $(".tickerLimit", evt.target).val() ;    if (valueLimit != '') {      myStocks = [];      $("#tickerList tr.ticker").each(function () {        myStocks.push({ ticker : $(this).find(".tickerName").text(), limit: $(this).find(".tickerLimit").val(), checkLimitUp: $(".limitUp", this).is(":checked"), checkLimitDown: $(".limitDown", this).is(":checked") });      });      save();    }  }});$(".checkLimits").on("click", function () {  createDataTable();  console.log("array");	checkLimits();})function checkLimits () {  for (var i = 0; i < dataTableArray.length; i++ ) {   if ($("tr.ticker:eq(" + i + ") .limitUp:checked").size() > 0) {      if (+dataTableArray[i].ask > dataTableArray[i].limit) {        //alert("attenzione " + dataTableArray[i].name + "ha superato il limite di " + dataTableArray[i].limit );        $("tr.ticker:eq(" + i + ")").addClass("warningLimit");      }    }    else if ($("tr.ticker:eq(" + i + ") .limitDown:checked").size() > 0) {      if (+dataTableArray[i].ask < dataTableArray[i].limit) {        //alert("attenzione " + dataTableArray[i].name + "è sceso sotto il limite di " + dataTableArray[i].limit );        $("tr.ticker:eq(" + i + ")").addClass("warningLimit");      }    }  }}$(document).on("click", ".limitUp", function (evt) {    recreateArray();    console.log(myStocks, "limitup");})$(document).on("click", ".limitDown", function (evt) {  recreateArray();  console.log(myStocks, "limitdown");})// REMOVE TICKERS$(".removeAll").on("click", function () {	$("tr td").remove();	myStocks = [];  save();})$(document).on("click", ".removeTicker", function (evt) {	var $tr = $(evt.target).parent().parent();	var ix = $("#tickerList tr.ticker").index($tr);  myStocks.splice(ix, 1);  $tr.remove();  console.log(myStocks, "myStocksremove");	save();})// RECREATE ARRAYfunction recreateArray () {  myStocks = [];  $("#tickerList tr.ticker").each(function () {    myStocks.push({ticker: $(this).find('.tickerName').text(), limit: $(this).find(".tickerLimit").val(), checkLimitUp: $(".limitUp", this).is(":checked"), checkLimitDown: $(".limitDown", this).is(":checked"), Historical: saveData });    });  /*myStocks.push({ historicalData: dataLineChart });*/  console.log(myStocks, "recreateArray");  save();}// EXTRA FIELDvar myExtraCurr;var myExtraPerChange;var extraValue;$(".extraField").on("change", function () {  extraValue = $(".extraField").val();  $(".extra span").remove();  if (extraValue == 'Select') {    $(".extra").append("<span></span>");  }  else if (extraValue != 'Select') {   $(".extra").append("<span>" + extraValue + "</span>");  }  update();})// GET TICKERvar myStocks = [];var saveData = [];function getTicker (callback) {  myExtraCurr = [];  myExtraPerChange = [];  headerlineChart = [];  var display = ['Name', 'Ask'];  if (extraValue) {    display.push(extraValue);  }	getStock(		{			stocks: myStocks.map(function(row) { return row.ticker;}),			display: display		}, 		function (err, data) {			if (err)			{				alert('Error:' + err);				return;      }			$("tr.ticker").remove();      var extra;			for (var i = 0; i < data.quote.length; i++) {        if (extraValue == 'Currency') {        extra = "<td class='extraColumn'> " + data.quote[i].Currency + "</td>";            }        else if (extraValue == 'PercentChange') {          extra = "<td class='extraColumn'> " + data.quote[i].PercentChange + "</td>";        }					$("#tickerList").append("<tr class='ticker'><td class='tickerName'>" + myStocks[i].ticker + "</td><td class='name'>" + data.quote[i].Name + "</td><td class='ask'>" + data.quote[i].Ask + "</td>" + extra + "<td class='removeTicker'><i class='fa fa-trash'></i></td><td class='bsetLimit'><div class='insertLimit'>Limit: <div class='limitContainer'><form action=''><input type='radio' name='limit' value='sup' class='limitUp'"  + (myStocks[i].checkLimitUp ? 'checked' : ' ' ) + "/>Sup<input class='limitDown' type='radio' name='limit' value='inf'" + (myStocks[i].checkLimitDown ? 'checked' : ' ' ) + " />Inf</form><input class='tickerLimit' type='text' value='" + myStocks[i].limit + "'/></div></div></td></tr>");          myExtraCurr.push(data.quote[i].Currency);          myExtraPerChange.push(data.quote[i].PercentChange);      }       for (var i = 0; i < myStocks.length; i++) {        myStocks[i].historical.push(data.quote[i].Ask);              console.log(data.quote[i].Ask, "historical");      }      /*createHistoricalArray();*/      console.log(myStocks, "historical");      //recreateArray();			save();      callback();		}	)}// ADD TICKER$("#titleinput").on("click", function () {        $(this).val('');})$("#titleinput").on("blur", function () {        $(this).val('Insert ticker');})$("#titleinput").on("keypress", function (evt) {    if(evt.which == 13) {      var newTicker = $("#titleinput").val();      if (newTicker != '') {          myStocks.push({ticker: newTicker, limit: 'Insert', checkLimitUp: false, checkLimitDown: false, historical: []});          console.log(myStocks, "1");          save();          update();      }      $("#titleinput").val('');    }})// SORTfunction sortByLowPrice () {	createDataTable();	dataTableArray.sort(function(a,b){    return a.ask > b.ask;      })  showDataTable();  $("tr .ask").first().addClass("firstTicker");  $("tr .ask").last().addClass("lastTicker");}function sortByHighPrice () {  createDataTable();  dataTableArray.sort(function(a,b){    return a.ask < b.ask;      })  showDataTable();  $("tr .ask").first().addClass("firstTicker");  $("tr .ask").last().addClass("lastTicker");}$(".sortByLowPrice").on("click", function (){     sortByLowPrice();})$(".sortByHighPrice").on("click", function (){     sortByHighPrice();})// PIECHART$(".drawPieChart").on("click", function () {  var dataPieChart = [];  $("#tickerList tr.ticker").each(function () {  dataPieChart.push([$(this).find(".name").text(), +$(this).find(".ask").text()]);  })    var data = new google.visualization.DataTable();  data.addColumn('string', 'Topping');  data.addColumn('number', 'Slices');  data.addRows(dataPieChart);  var options = {'title':'My asset',                 'width':400,                 'height':300};  var chart = new google.visualization.PieChart(document.getElementById('chart_div'));  chart.draw(data, options);})// CREATE DATA LINECHART var time;function getCurrentTime () {  var currentTime = new Date();  var hours = currentTime.getHours();  var minutes = currentTime.getMinutes();  var sec = currentTime.getSeconds();  if (minutes < 10) {    minutes = "0" + minutes  }  time = "" + hours + ":" + minutes + ":" + sec + "";}var dataLineChart;var tableLineChart = [];function createHistoricalArray() {  var check = [];  getCurrentTime();  headerlineChart = [];  rowLineChart = [];    for (var i = 0; i < myStocks.length; i++) {    check.push(myStocks[i].historical.length);  }  var maxLenght = Math.max.apply(null, check);  console.log(check);  console.log(maxLenght);  for (var i = 0; i < myStocks.length; i++) {    var a = myStocks[i].historical.length;    var b = maxLenght-a;   // if (a < maxLenght) {            console.log(a, "a");            console.log(b, "b");    while (a < maxLenght) {        myStocks[i].historical.unshift(null);        a++;    }  }  console.log(myStocks, "equilibrato");  $("#tickerList tr.ticker").each(function () {    headerlineChart.push($(this).find(".name").text());  })  var pippo = myStocks.map(function(row) { return row.historical;});    rowLineChart.push(pippo);  console.log(pippo, "pippo");  var pluto = [];/*  for (var i = 0; i < pippo.length; i++) {        for (var j = 0; j < pippo[i].length; j++) {          pluto.push([pippo[i][j], pippo[i++][j]]);    }  }*/  if (pippo.length) {    console.log("pippo", pippo[0]);  for (var i = 0; i < pippo[0].length; i++) {    var entry = [];    for (var j = 0; j < pippo.length; j++) {      console.log(pippo[i], pippo[j][i], "cao");      entry.push(pippo[j][i]);    }    pluto.push(entry);  }}console.log("ciaoooooooooooo");    headerlineChart.unshift("Time");  rowLineChart.unshift(time);  tableLineChart.push(rowLineChart);  dataLineChart = [headerlineChart].concat(tableLineChart);  for (var i = 0; i < dataLineChart.length; i++) {    if (dataLineChart[i].length < headerlineChart.length) {      dataLineChart[i].push(null);    }  }};// LINECHART$(".drawLineChart").on("click", function () {  historicalLineChart();})function historicalLineChart () {  createHistoricalArray();  var data = google.visualization.arrayToDataTable(dataLineChart);  var options = { title: 'Company Performance' };  var chart = new google.visualization.LineChart(document.getElementById('chart_div'));  chart.draw(data, options);}// SAVEfunction save () {  localStorage.setItem("myStocks", JSON.stringify(myStocks));}//UPDATE$(".setAutoUpdate").on("click", function () {    setInterval(update,  10000);  })function update() {  var status = localStorage.getItem("myStocks");  if (status) {    myStocks = JSON.parse(status);  getTicker(function() {    //sortByLowPrice();    checkLimits();    //historicalLineChart();  });  }}update();/*setInterval(autoupdate,  10000);*/});